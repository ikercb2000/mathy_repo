library(astsa)
install.packages("astsa")
library("astsa")
gdpOri=read.csv2("pibsp.csv",header=F)/1000
gdp=ts(c(t(cbind(matrix(NA,length(gdpOri),2),gdpOri))),freq=12,start=c(1995,1),end=c(2019,12))
plot(gdp,type="p")
abline(v=1995:2023,lty=3,col=4)
plot(gdp,type="p")
abline(v=1995:2023,lty=3,col=4)
y=gdp
y[is.na(y)]=0
num=length(y)
A = array(1, dim=c(1,1,num))
for(k in 1:num) if (y[k] == 0) A[k]= matrix(0)
y=gdp
y[is.na(y)]=0
num=length(y)
A = array(1, dim=c(1,1,num))
A
dim(A)
for(k in 1:num) if (y[k] == 0) A[k]= matrix(0)
dim(A)
mu0=matrix(y[3])
y[3]
Sigma0=matrix(100)
matrix(100)
cR=matrix(1e-6)
Linn=function(param){
Phi=matrix(param[1])
cQ=matrix(param[2])
kf=Kfilter(y,A,mu0,Sigma0,Phi,cQ,cR)
return(kf$like)
}
library("astsa")
knitr::opts_chunk$set(echo = TRUE)
library("astsa")
gdpOri=read.csv2("pibsp.csv",header=F)/1000
gdp=ts(c(t(cbind(matrix(NA,length(gdpOri),2),gdpOri))),freq=12,start=c(1995,1),end=c(2019,12))
plot(gdp,type="p")
abline(v=1995:2023,lty=3,col=4)
y=gdp
y[is.na(y)]=0
num=length(y)
A = array(1, dim=c(1,1,num))
dim(A)
for(k in 1:num) if (y[k] == 0) A[k]= matrix(0)
mu0=matrix(y[3])
y[3]
Sigma0=matrix(100)
cR=matrix(1e-6)
Linn=function(param){
Phi=matrix(param[1])
cQ=matrix(param[2])
kf=Kfilter(y,A,mu0,Sigma0,Phi,cQ,cR)
return(kf$like)
}
initpar=c(1,10)
est=optim(initpar,Linn,NULL,method="BFGS",hessian=TRUE)
initpar=c(1,10)
est=optim(initpar,Linn,NULL,method="BFGS",hessian=TRUE)
stderr=sqrt(diag(solve(est$hessian)))
(Phi=est$par[1])
(cQ=est$par[2])
ks1=Ksmooth(y,A,mu0, Sigma0,Phi,cQ,cR)
smo1=ts(data.frame(GDP=c(unlist(ks1$Xs))),start=c(1995,1),freq=12)
Psmo1=ts(data.frame(GDP=c(unlist(ks1$Ps))),start=c(1995,1),freq=12)
llim1=smo1+qnorm(0.025)*sqrt(Psmo1)
ulim1=smo1+qnorm(0.975)*sqrt(Psmo1)
smo1
ts.plot(smo1,llim1,ulim1,gdp,col=c(2,4,4,1),type="o",lty=c(1,3,3,1),xlim=c(2011,2016),ylim=c(240,290),main="PIB mensual")
library("astsa")
gdpOri=read.csv2("pibsp.csv",header=F)/1000
gdp=ts(c(t(cbind(matrix(NA,length(gdpOri),2),gdpOri))),freq=12,start=c(1995,1),end=c(2019,12))
plot(gdp,type="p")
abline(v=1995:2023,lty=3,col=4)
y=gdp
y[is.na(y)]=0
num=length(y)
A = array(1, dim=c(1,1,num))
for(k in 1:num) if (y[k] == 0) A[k]= matrix(0)
mu0=matrix(y[3])
Sigma0=matrix(100)
cR=matrix(1e-6)
Linn=function(param){
Phi=matrix(param[1])
cQ=matrix(param[2])
kf=Kfilter(y,A,mu0,Sigma0,Phi,cQ,cR)
return(kf$like)
}
initpar=c(1,10)
est=optim(initpar,Linn,NULL,method="BFGS",hessian=TRUE)
stderr=sqrt(diag(solve(est$hessian)))
(Phi=est$par[1])
(cQ=est$par[2])
ks1=Ksmooth(y,A,mu0, Sigma0,Phi,cQ,cR)
smo1=ts(data.frame(GDP=c(unlist(ks1$Xs))),start=c(1995,1),freq=12)
Psmo1=ts(data.frame(GDP=c(unlist(ks1$Ps))),start=c(1995,1),freq=12)
llim1=smo1+qnorm(0.025)*sqrt(Psmo1)
ulim1=smo1+qnorm(0.975)*sqrt(Psmo1)
ts.plot(smo1,llim1,ulim1,gdp,col=c(2,4,4,1),type="o",lty=c(1,3,3,1),xlim=c(2011,2016),ylim=c(240,290),main="PIB mensual")
ts.plot(smo1,llim1,ulim1,gdp,col=c(2,4,4,1),type="o",lty=c(1,3,3,1),xlim=c(2014,2016),ylim=c(240,290),main="PIB mensual")
ts.plot(smo1,llim1,ulim1,gdp,col=c(2,4,4,1),type="o",lty=c(1,3,3,1),xlim=c(2011,2016),ylim=c(240,290),main="PIB mensual")
where $x_t$ denotes the monthly GDP (state) at time $t$, $\phi$ is the autorregresive parameter, and $w_t$ is an iid Gaussian random variable with zero mean and $Q$ variance. In this case, we assume that the monthly GDP behaves like an AR(1) process, and we want to estimate the parameter $\phi$ and $Q$ in order to obtain the process.
For obtaining the observation equation for the quarterly GDP, we partition the vectors and the matrices in two different component: a component for the data observed ($y_t^{(1)}$) and another for the unobserved data or missing data $y_t^{(2)}=0$, which is fixed to zero in order to maintain the dimensions of the equations (as the state equation and the observation equation would have different dimensions if just accounting for the data observed).
ts.plot(smo1,llim1,ulim1,gdp,col=c(2,4,4,1),type="o",lty=c(1,3,3,1),xlim=c(2011,2016),ylim=c(240,290),main="PIB mensual")
est=optim(initpar,Linn,NULL,method="BFGS",hessian=TRUE)
est
cR=matrix(1e-6)
cR
A
y[3]
(Phi=est$par[1])
(cQ=est$par[2])
(Phi=est$par[1])
(cQ=est$par[2])
ks1
smo1
Psmo1
stderr
est
y=gdp
y[is.na(y)]=0
num=length(y)
A = array(1, dim=c(1,1,num))
for(k in 1:num) if (y[k] == 0) A[k]= matrix(0)
ulim1=smo1+qnorm(0.975)*sqrt(Psmo1)
ts.plot(smo1,llim1,ulim1,gdp,col=c(2,4,4,1),type="o",lty=c(1,3,3,1),
xlim=c(2011,2016),ylim=c(240,290),main="PIB mensual")
ser=afil
afil=ts(read.table("afiliados.csv",header=F)[,1]/1000000,start=c(1995,1),end=c(2019,12),freq=12)
plot(afil)
abline(v=1995:2023,lty=3,col=4)
ser=afil
num=length(ser)
y=matrix(ser,ncol=1)
A = matrix(c(1,0,1,rep(0,10)),nr=1)
Phi=matrix(0,nc=13,nr=13)
Phi[1:2,1:2]=matrix(c(1,0,1,1),nrow=2)
Phi[3,3:13]=rep(-1,11)
Phi[4:13,3:12]=diag(1,10)
mu0=c(y[1],rep(0,12))
Sigma0=diag(rep(10,13))
Phi
cor(ts.union(gdp,afil2),use="pairwise.complete.obs")
knitr::opts_chunk$set(echo = TRUE)
library("astsa")
initpar=c(0.1,0.01,0.01,0)
est=optim(initpar,Linn,NULL,method="BFGS",hessian=TRUE)
plot(ts.union(gdp,afil2),type="o")
initpar=c(0.1,0.01,0.01,0)
est=suppressWarnings(optim(initpar,Linn,NULL,method="BFGS",hessian=TRUE))
x <- matrix(rnorm(100), nrow = 5)
dim(x)
dist(x)
class(dist(x))
dist(x, diag = TRUE)
dist(x, upper = TRUE)
dist(x, diag = TRUE,upper=TRUE)
m <- as.matrix(dist(x))
m
dist(x, diag = TRUE)
dist(x, diag = TRUE)
dist(x, upper = TRUE)
dist(x, diag = TRUE,upper=TRUE)
dist(x, diag = TRUE)
outBC$GOF
outBC=cmdscale(data.D2, k=3, eig=TRUE)
library(vegan)
wd<- "~/Docencia/Curs_2020_2021_2S/UB/MESIO/MULTIVARIANT/sessio1"
setwd(wd)
